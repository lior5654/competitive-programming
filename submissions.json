{
  "CF127074499": {
    "contest_id": 1562,
    "language": "GNU C++17 (64)",
    "path": "codeforces/1562/B.cpp",
    "platform": "Codeforces",
    "problem_index": "B",
    "problem_name": "Scenes From a Memory",
    "problem_url": "https://codeforces.com/contest/1562/problem/B",
    "submission_id": "CF127074499",
    "submission_url": "https://codeforces.com/contest/1562/submission/127074499",
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "math",
      "number theory",
      "*1000"
    ],
    "timestamp": "Aug/26/2021 18:01"
  },
  "CF127086189": {
    "contest_id": 1562,
    "language": "GNU C++17 (64)",
    "path": "codeforces/1562/C.cpp",
    "platform": "Codeforces",
    "problem_index": "C",
    "problem_name": "Rings",
    "problem_url": "https://codeforces.com/contest/1562/problem/C",
    "submission_id": "CF127086189",
    "submission_url": "https://codeforces.com/contest/1562/submission/127086189",
    "tags": [
      "constructive algorithms",
      "math",
      "*1500"
    ],
    "timestamp": "Aug/26/2021 18:20"
  },
  "CF127122139": {
    "contest_id": 1562,
    "language": "GNU C++17 (64)",
    "path": "codeforces/1562/D1.cpp",
    "platform": "Codeforces",
    "problem_index": "D1",
    "problem_name": "Two Hundred Twenty One (easy version)",
    "problem_url": "https://codeforces.com/contest/1562/problem/D1",
    "submission_id": "CF127122139",
    "submission_url": "https://codeforces.com/contest/1562/submission/127122139",
    "tags": [
      "data structures",
      "dp",
      "math",
      "*1700"
    ],
    "timestamp": "Aug/26/2021 19:41"
  },
  "CF132962283": {
    "contest_id": 1579,
    "language": "Go",
    "path": "codeforces/1579/G.go",
    "platform": "Codeforces",
    "problem_index": "G",
    "problem_name": "Minimal Coverage",
    "problem_url": "https://codeforces.com/contest/1579/problem/G",
    "submission_id": "CF132962283",
    "submission_url": "https://codeforces.com/contest/1579/submission/132962283",
    "tags": [
      "dp",
      "*2200"
    ],
    "timestamp": "Oct/24/2021 23:34"
  },
  "CF141952838": {
    "contest_id": 1622,
    "language": "GNU C++17 (64)",
    "path": "codeforces/1622/D.cpp",
    "platform": "Codeforces",
    "problem_index": "D",
    "problem_name": "Shuffle",
    "problem_url": "https://codeforces.com/contest/1622/problem/D",
    "submission_id": "CF141952838",
    "submission_url": "https://codeforces.com/contest/1622/submission/141952838",
    "tags": [
      "combinatorics",
      "math",
      "two pointers",
      "*2000"
    ],
    "timestamp": "Jan/08/2022 02:28"
  },
  "CF142021488": {
    "contest_id": 1185,
    "language": "GNU C++17 (64)",
    "path": "codeforces/1185/G1.cpp",
    "platform": "Codeforces",
    "problem_index": "G1",
    "problem_name": "Playlist for Polycarp (easy version)",
    "problem_url": "https://codeforces.com/contest/1185/problem/G1",
    "submission_id": "CF142021488",
    "submission_url": "https://codeforces.com/contest/1185/submission/142021488",
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "*2100"
    ],
    "timestamp": "Jan/08/2022 19:13"
  },
  "CF142032134": {
    "contest_id": 1286,
    "language": "GNU C++17 (64)",
    "path": "codeforces/1286/C1.cpp",
    "platform": "Codeforces",
    "problem_index": "C1",
    "problem_name": "Madhouse (Easy version)",
    "problem_url": "https://codeforces.com/contest/1286/problem/C1",
    "submission_id": "CF142032134",
    "submission_url": "https://codeforces.com/contest/1286/submission/142032134",
    "tags": [
      "brute force",
      "constructive algorithms",
      "interactive",
      "math",
      "*2400"
    ],
    "timestamp": "Jan/08/2022 21:50"
  },
  "CF142034440": {
    "contest_id": 1114,
    "language": "GNU C++17 (64)",
    "path": "codeforces/1114/D.cpp",
    "platform": "Codeforces",
    "problem_index": "D",
    "problem_name": "Flood Fill",
    "problem_url": "https://codeforces.com/contest/1114/problem/D",
    "submission_id": "CF142034440",
    "submission_url": "https://codeforces.com/contest/1114/submission/142034440",
    "tags": [
      "dp",
      "*1900"
    ],
    "timestamp": "Jan/08/2022 22:42"
  },
  "CF143645621": {
    "contest_id": 1628,
    "language": "GNU C++17 (64)",
    "path": "codeforces/1628/A.cpp",
    "platform": "Codeforces",
    "problem_index": "A",
    "problem_name": "Meximum Array",
    "problem_url": "https://codeforces.com/contest/1628/problem/A",
    "submission_id": "CF143645621",
    "submission_url": "https://codeforces.com/contest/1628/submission/143645621",
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "two pointers",
      "*1400"
    ],
    "timestamp": "Jan/22/2022 16:51"
  },
  "CF143659488": {
    "contest_id": 1628,
    "language": "GNU C++17 (64)",
    "path": "codeforces/1628/B.cpp",
    "platform": "Codeforces",
    "problem_index": "B",
    "problem_name": "Peculiar Movie Preferences",
    "problem_url": "https://codeforces.com/contest/1628/problem/B",
    "submission_id": "CF143659488",
    "submission_url": "https://codeforces.com/contest/1628/submission/143659488",
    "tags": [
      "greedy",
      "strings",
      "*1700"
    ],
    "timestamp": "Jan/22/2022 17:10"
  },
  "CF143693923": {
    "contest_id": 1628,
    "language": "GNU C++17 (64)",
    "path": "codeforces/1628/D1.cpp",
    "platform": "Codeforces",
    "problem_index": "D1",
    "problem_name": "Game on Sum (Easy Version)",
    "problem_url": "https://codeforces.com/contest/1628/problem/D1",
    "submission_id": "CF143693923",
    "submission_url": "https://codeforces.com/contest/1628/submission/143693923",
    "tags": [
      "combinatorics",
      "dp",
      "games",
      "math",
      "*2100"
    ],
    "timestamp": "Jan/22/2022 18:21"
  },
  "CF147883602": {
    "contest_id": 1637,
    "language": "GNU C++17 (64)",
    "path": "codeforces/1637/E.cpp",
    "platform": "Codeforces",
    "problem_index": "E",
    "problem_name": "Best Pair",
    "problem_url": "https://codeforces.com/contest/1637/problem/E",
    "submission_id": "CF147883602",
    "submission_url": "https://codeforces.com/contest/1637/submission/147883602",
    "tags": [
      "binary search",
      "brute force",
      "implementation",
      "*2100"
    ],
    "timestamp": "Feb/27/2022 19:40"
  },
  "CF148300135": {
    "contest_id": 1638,
    "language": "GNU C++17 (64)",
    "path": "codeforces/1638/A.cpp",
    "platform": "Codeforces",
    "problem_index": "A",
    "problem_name": "Reverse",
    "problem_url": "https://codeforces.com/contest/1638/problem/A",
    "submission_id": "CF148300135",
    "submission_url": "https://codeforces.com/contest/1638/submission/148300135",
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "*800"
    ],
    "timestamp": "Mar/04/2022 17:32"
  },
  "CF148506503": {
    "contest_id": 1641,
    "language": "GNU C++17 (64)",
    "path": "codeforces/1641/E.cpp",
    "platform": "Codeforces",
    "problem_index": "E",
    "problem_name": "Special Positions",
    "problem_url": "https://codeforces.com/contest/1641/problem/E",
    "submission_id": "CF148506503",
    "submission_url": "https://codeforces.com/contest/1641/submission/148506503",
    "tags": [
      "combinatorics",
      "divide and conquer",
      "fft",
      "math",
      "*3300"
    ],
    "timestamp": "Mar/06/2022 02:56"
  }
}